<?php

namespace Proxies\__CG__\EmotionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Vehicule extends \EmotionBundle\Entity\Vehicule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'id', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'marque', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'model', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'numserie', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'couleur', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'immatriculation', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'villedepart', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'nbkilometres', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'dateachat', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'datedispo', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'datefindispo', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'prixachat', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'image'];
        }

        return ['__isInitialized__', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'id', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'marque', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'model', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'numserie', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'couleur', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'immatriculation', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'villedepart', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'nbkilometres', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'dateachat', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'datedispo', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'datefindispo', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'prixachat', '' . "\0" . 'EmotionBundle\\Entity\\Vehicule' . "\0" . 'image'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Vehicule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarque', []);

        return parent::getMarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarque($marque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarque', [$marque]);

        return parent::setMarque($marque);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', []);

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', [$model]);

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumserie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumserie', []);

        return parent::getNumserie();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumserie($numserie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumserie', [$numserie]);

        return parent::setNumserie($numserie);
    }

    /**
     * {@inheritDoc}
     */
    public function getCouleur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCouleur', []);

        return parent::getCouleur();
    }

    /**
     * {@inheritDoc}
     */
    public function setCouleur($couleur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCouleur', [$couleur]);

        return parent::setCouleur($couleur);
    }

    /**
     * {@inheritDoc}
     */
    public function getImmatriculation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImmatriculation', []);

        return parent::getImmatriculation();
    }

    /**
     * {@inheritDoc}
     */
    public function setImmatriculation($immatriculation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImmatriculation', [$immatriculation]);

        return parent::setImmatriculation($immatriculation);
    }

    /**
     * {@inheritDoc}
     */
    public function getVilledepart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilledepart', []);

        return parent::getVilledepart();
    }

    /**
     * {@inheritDoc}
     */
    public function setVilledepart($villedepart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVilledepart', [$villedepart]);

        return parent::setVilledepart($villedepart);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbkilometres()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbkilometres', []);

        return parent::getNbkilometres();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbkilometres($nbkilometres)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbkilometres', [$nbkilometres]);

        return parent::setNbkilometres($nbkilometres);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateachat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateachat', []);

        return parent::getDateachat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateachat($dateachat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateachat', [$dateachat]);

        return parent::setDateachat($dateachat);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatedispo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatedispo', []);

        return parent::getDatedispo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatedispo($datedispo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatedispo', [$datedispo]);

        return parent::setDatedispo($datedispo);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatefindispo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatefindispo', []);

        return parent::getDatefindispo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatefindispo($datefindispo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatefindispo', [$datefindispo]);

        return parent::setDatefindispo($datefindispo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixachat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixachat', []);

        return parent::getPrixachat();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrixachat($prixachat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrixachat', [$prixachat]);

        return parent::setPrixachat($prixachat);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

}
